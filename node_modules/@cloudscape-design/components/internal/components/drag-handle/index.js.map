{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/drag-handle/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAElD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAUrC,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,EACjC,SAAS,EACT,eAAe,EACf,QAAQ,EACR,aAAa,EACb,SAAS,GACO;IAChB,OAAO;IACL,4DAA4D;IAC5D,oDAAoD;IACpD,sDAAsD;IACtD,4EAA4E;IAC5E,4BAA4B;IAC5B,6BACE,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC,gBACzD,SAAS,sBACH,eAAe,mBAClB,QAAQ,EACvB,aAAa,EAAE,aAAa,EAC5B,SAAS,EAAE,SAAS;QAEpB,oBAAC,YAAY,IAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,EAAC,gBAAgB,GAAG,CAC9E,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../../icon/internal';\n\nimport styles from './styles.css.js';\n\nexport interface DragHandleProps {\n  ariaLabel: string;\n  ariaDescribedby?: string;\n  disabled?: boolean;\n  onPointerDown?: React.PointerEventHandler;\n  onKeyDown?: React.KeyboardEventHandler;\n}\n\nexport default function DragHandle({\n  ariaLabel,\n  ariaDescribedby,\n  disabled,\n  onPointerDown,\n  onKeyDown,\n}: DragHandleProps) {\n  return (\n    // We need to use a div with button role instead of a button\n    // so that Safari will focus on it when clicking it.\n    // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n    // Otherwise, we can't reliably catch keyboard events coming from the handle\n    // when it is being dragged.\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={clsx(styles.handle, disabled && styles['handle-disabled'])}\n      aria-label={ariaLabel}\n      aria-describedby={ariaDescribedby}\n      aria-disabled={disabled}\n      onPointerDown={onPointerDown}\n      onKeyDown={onKeyDown}\n    >\n      <InternalIcon variant={disabled ? 'disabled' : undefined} name=\"drag-indicator\" />\n    </div>\n  );\n}\n"]}